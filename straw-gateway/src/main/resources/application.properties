#网关端口号 是Eureka的客户端
server.port=9000

#要声明自己的名字!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
spring.application.name=gateway

#配置zuul的路由路径
#有了路由路径的配置，我们的网关可以访问到当前微服务架构中的任何资源
#而不需要知道其端口号和ip地址

#zuul.routes是固定的开头， resource是我们起的名字 service-id是固定的
#service-id 是固定的，必须指定Eureka中一个已经注册的微服务名称
zuul.routes.resource.service-id=resource-server
#resource必须和上方同样位置的名字相同，表示他们配置的是一组路由信息
#当localhost:9000之后跟的是以/resource/的路径时，就会访问
#service-id 指定的resource-server这个微服务的资源
zuul.routes.resource.path=/resource/**


zuul.routes.sys.service-id=sys-service
zuul.routes.sys.path=/sys/**
#下面的路由配置，是允许网关向sys发送敏感头，敏感头中保安用户的sessionId
zuul.routes.sys.sensitive-headers=Authorization

zuul.routes.faq.service-id=faq-service
zuul.routes.faq.path=/faq/**
zuul.routes.faq.sensitive-headers=Authorization

zuul.routes.search.service-id=search-service
zuul.routes.search.path=/search/**
zuul.routes.search.sensitive-headers=Authorization


#通知项目各组件当前session会共享给Redis
spring.session.store-type=redis
#SpringBoot连接Redis的连接参数
spring.redis.host=localhost
spring.redis.port=6379


#上传文件大小限制
spring.servlet.multipart.max-file-size=5000MB
spring.servlet.multipart.max-request-size=5000MB

#defaultZone 默认位置
eureka.client.service-url.defaultZone = http://localhost:8761/eureka
#默认情况下注册位置就是 ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ 所以当前情况下这个代码可以省略

#包括在EurekaServer中我们设置了两个false的配置，这里要设置为ture
#因为ture是默认值，其实也可以省略
#对自己注册
eureka.client.register-with-eureka=true
# 获取注册列表
eureka.client.fetch-registry=true

#eureka在session共享时，偶尔因为eureka出现不稳定的情况
#经过前辈们的测试，按照下面的配置编写之后，稳定性会明显提升
eureka.instance.prefer-ip-address=false
eureka.instance.hostname=localhost
eureka.instance.ip-address=127.0.0.1
eureka.instance.instance-id=${spring.application.name}:${eureka.instance.hostname}:${server.port}


logging.level.com.bambi.straw.gateway=debug